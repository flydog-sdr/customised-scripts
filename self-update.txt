#!/usr/bin/env bash

# SCRIPT_ID variable for self-update (Compatible with the old version)
SCRIPT_ID=3da85fea

# This Bash script to install the latest release of FlyDog SDR:
# https://github.com/flydog-sdr/FlyDog_SDR_GPS

# Depends on BusyBox, cURL and jq, please solve it yourself
# You may plan to execute this Bash script regularly:
# install -m 755 self-update.txt /usr/bin/updater.sh
# 0 4 * * * /usr/bin/updater.sh

# The URL of the script project is:
# https://github.com/flydog-sdr/customised-scripts

# The URL of the script is:
# https://raw.githubusercontent.com/flydog-sdr/customised-scripts/master/self-update.txt

# Define basic variables
DIR_TMP="$(mktemp -d)"
DOWNLOAD_LINK_A="bclswl0827.coding.net/p/flydog-sdr/d/api/git/archive/master"
DOWNLOAD_LINK_B="sdrotg.com/scripts.zip"

# Define font colour
Green_font_prefix="\033[32m"
Red_font_prefix="\033[31m"
Green_background_prefix="\033[42;37m"
Red_background_prefix="\033[41;37m"
Font_color_suffix="\033[0m"

# Define log colour
INFO="${Green_font_prefix}[INFO]${Font_color_suffix}"
ERROR="${Red_font_prefix}[ERROR]${Font_color_suffix}"
TIP="${Green_font_prefix}[TIP]${Font_color_suffix}"

curl() {
    $(type -P curl) --retry 10 --retry-delay 5 --retry-max-time 60 "$@"
}

# Check country
check_country() {
	echo -e "${INFO} Getting country data, please wait..."
	if ! curl -fSL -H 'Cache-Control: no-cache' -o ${DIR_TMP}/country_code.tmp ipapi.co/country_code &>/dev/null; then
		COUNTRY="CN"
	else
		COUNTRY="$(cat ${DIR_TMP}/country_code.tmp)"
	fi
	rm -rf ${DIR_TMP}/*.tmp
}

# Check connectivity
check_net() {
	if [[ "$(curl -fsSIL microsoft.com -w %{http_code} | tail -n1)" != "200" ]]; then
		echo -e "${ERROR} Internet is not connected, exiting..."
		sleep 3s
		exit 1
	fi
}

# Check UID (should be running as root)
check_uid() {
  if [[ "${UID}" != "0" ]]; then
    echo -e "${ERROR} Not running with root, exiting..."
    sleep 3s
    exit 1
  fi
}

# Compare version numbers
compare_version() {
  if [[ "${REMOTE_VER}" = "${LOCAL_VER}" ]]; then
    rm -rf "${DIR_TMP}"
    echo -e "${INFO} Already the latest version, exiting..."
    sleep 3s
    exit 0
  fi
}

# Execute upgrade script
execute_upgrade() {
  find ${DIR_TMP} -name "deploy.sh" | bash
  rm -rf ${DIR_TMP}
}

# Get deployment
fetch_deployment() {
  if [[ "${COUNTRY}" == "CN" ]]; then
    if ! curl -fSL -H 'Cache-Control: no-cache' -o  ${DIR_TMP}/scripts.zip ${1} &>/dev/null; then
      if ! curl -fSL -H 'Cache-Control: no-cache' -o  ${DIR_TMP}/scripts.zip ${2} &>/dev/null; then
        echo -e "${ERROR} Download failed, exiting..."
        sleep 3s
        exit 1
      fi
    fi
  else
    if ! curl -fSL -H 'Cache-Control: no-cache' -o ${DIR_TMP}/scripts.zip ${2} &>/dev/null; then
      if ! curl -fSL -H 'Cache-Control: no-cache' -o ${DIR_TMP}/scripts.zip ${1} &>/dev/null; then
        echo -e "${ERROR} Download failed, exiting..."
        sleep 3s
        exit 1
      fi
    fi
  fi
  busybox unzip ${DIR_TMP}/scripts.zip -d ${DIR_TMP} &>/dev/null
  rm -rf ${DIR_TMP}/scripts.zip
  chmod -R 755 ${DIR_TMP}
}

# Get version number
fetch_version() {
  if ! curl -H 'Cache-Control: no-cache' -o ${DIR_TMP}/LOCAL_VER flydog-sdr:8073/VER &>/dev/null; then
    if [[ ! -f "/etc/kiwi.config/_VER" ]]; then
      echo "0" > /etc/kiwi.config/_VER
      LOCAL_VER="$(cat /etc/kiwi.config/_VER)"
    else
      LOCAL_VER="$(cat /etc/kiwi.config/_VER)"
    fi
  else
    LOCAL_VER="$(cat ${DIR_TMP}/LOCAL_VER | jq --raw-output '(.maj|tostring) + (.min|tostring)')"
    rm -rf ${DIR_TMP}/LOCAL_VER
  fi
  REMOTE_VER="$(find ${DIR_TMP} -name "VER" | xargs cat)"
}

# Check update settings
update_enabled() {
  if [[ "$(cat /etc/kiwi.config/_UPDATE)" != "1" ]]; then
    echo -e "${INFO} Update is disabled, exiting..."
    sleep 3s
    exit 0
  fi
}

main() {
  check_uid
  update_enabled
  check_net
  check_country
  fetch_deployment ${DOWNLOAD_LINK_A} ${DOWNLOAD_LINK_B}
  fetch_version
  compare_version
  execute_upgrade
}
main "$@"; exit
